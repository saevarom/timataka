# Generated by Django 4.2.7 on 2025-09-12 17:50

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('race_type', models.CharField(choices=[('marathon', 'Marathon'), ('half_marathon', 'Half Marathon'), ('10k', '10K'), ('5k', '5K'), ('trail', 'Trail Run'), ('ultra', 'Ultra Marathon'), ('other', 'Other')], max_length=20)),
                ('date', models.DateField()),
                ('location', models.CharField(max_length=100)),
                ('distance_km', models.FloatField(validators=[django.core.validators.MinValueValidator(0.1)])),
                ('elevation_gain_m', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('max_participants', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('registration_url', models.URLField(blank=True)),
                ('official_website', models.URLField(blank=True)),
                ('organizer', models.CharField(blank=True, max_length=200)),
                ('entry_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('currency', models.CharField(default='ISK', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source_url', models.URLField(blank=True, help_text='URL where this race data was scraped from')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bib_number', models.CharField(blank=True, max_length=20)),
                ('participant_name', models.CharField(max_length=200)),
                ('age', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(120)])),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('nationality', models.CharField(default='ISL', help_text='ISO 3166-1 alpha-3 country code', max_length=3)),
                ('club', models.CharField(blank=True, help_text='Running club or team', max_length=200)),
                ('finish_time', models.DurationField(help_text='Total race time')),
                ('gun_time', models.DurationField(blank=True, help_text='Time from gun start', null=True)),
                ('overall_place', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('gender_place', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('age_group_place', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(choices=[('finished', 'Finished'), ('dnf', 'Did Not Finish'), ('dns', 'Did Not Start'), ('dq', 'Disqualified')], default='finished', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='races.race')),
            ],
            options={
                'ordering': ['overall_place'],
            },
        ),
        migrations.CreateModel(
            name='Split',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance_km', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('split_time', models.DurationField(help_text='Time at this split point')),
                ('cumulative_time', models.DurationField(help_text='Total time from start to this split')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='splits', to='races.result')),
            ],
            options={
                'ordering': ['distance_km'],
            },
        ),
        migrations.AddIndex(
            model_name='race',
            index=models.Index(fields=['date'], name='races_race_date_a5a560_idx'),
        ),
        migrations.AddIndex(
            model_name='race',
            index=models.Index(fields=['race_type'], name='races_race_race_ty_e61510_idx'),
        ),
        migrations.AddIndex(
            model_name='race',
            index=models.Index(fields=['location'], name='races_race_locatio_3c4212_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='split',
            unique_together={('result', 'distance_km')},
        ),
        migrations.AddIndex(
            model_name='result',
            index=models.Index(fields=['race', 'overall_place'], name='races_resul_race_id_1ea091_idx'),
        ),
        migrations.AddIndex(
            model_name='result',
            index=models.Index(fields=['participant_name'], name='races_resul_partici_6c8049_idx'),
        ),
        migrations.AddIndex(
            model_name='result',
            index=models.Index(fields=['finish_time'], name='races_resul_finish__989041_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='result',
            unique_together={('race', 'overall_place')},
        ),
    ]
